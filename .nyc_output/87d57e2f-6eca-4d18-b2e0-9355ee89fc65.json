{"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/combat.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/combat.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":14,"column":8},"end":{"line":14,"column":33}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"4":{"start":{"line":25,"column":8},"end":{"line":30,"column":32}},"5":{"start":{"line":26,"column":12},"end":{"line":26,"column":30}},"6":{"start":{"line":27,"column":13},"end":{"line":30,"column":32}},"7":{"start":{"line":28,"column":12},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":12},"end":{"line":30,"column":32}},"9":{"start":{"line":31,"column":8},"end":{"line":31,"column":97}},"10":{"start":{"line":38,"column":18},"end":{"line":38,"column":45}},"11":{"start":{"line":39,"column":18},"end":{"line":39,"column":45}},"12":{"start":{"line":40,"column":8},"end":{"line":50,"column":9}},"13":{"start":{"line":41,"column":12},"end":{"line":41,"column":56}},"14":{"start":{"line":42,"column":12},"end":{"line":42,"column":61}},"15":{"start":{"line":43,"column":12},"end":{"line":46,"column":13}},"16":{"start":{"line":44,"column":16},"end":{"line":44,"column":60}},"17":{"start":{"line":45,"column":16},"end":{"line":45,"column":65}},"18":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"19":{"start":{"line":48,"column":16},"end":{"line":48,"column":110}},"20":{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},"21":{"start":{"line":52,"column":12},"end":{"line":52,"column":56}},"22":{"start":{"line":55,"column":12},"end":{"line":55,"column":56}},"23":{"start":{"line":59,"column":0},"end":{"line":59,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":36},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":31},"end":{"line":32,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":12},"end":{"line":57,"column":5}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":8},"end":{"line":30,"column":32}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":30,"column":32}},{"start":{"line":25,"column":8},"end":{"line":30,"column":32}}],"line":25},"1":{"loc":{"start":{"line":27,"column":13},"end":{"line":30,"column":32}},"type":"if","locations":[{"start":{"line":27,"column":13},"end":{"line":30,"column":32}},{"start":{"line":27,"column":13},"end":{"line":30,"column":32}}],"line":27},"2":{"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":131}},"type":"binary-expr","locations":[{"start":{"line":27,"column":18},"end":{"line":27,"column":76}},{"start":{"line":27,"column":82},"end":{"line":27,"column":130}}],"line":27},"3":{"loc":{"start":{"line":40,"column":15},"end":{"line":40,"column":37}},"type":"binary-expr","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":23}},{"start":{"line":40,"column":29},"end":{"line":40,"column":36}}],"line":40},"4":{"loc":{"start":{"line":43,"column":12},"end":{"line":46,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":46,"column":13}},{"start":{"line":43,"column":12},"end":{"line":46,"column":13}}],"line":43},"5":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}],"line":47},"6":{"loc":{"start":{"line":47,"column":16},"end":{"line":47,"column":38}},"type":"binary-expr","locations":[{"start":{"line":47,"column":17},"end":{"line":47,"column":24}},{"start":{"line":47,"column":30},"end":{"line":47,"column":37}}],"line":47},"7":{"loc":{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},{"start":{"line":51,"column":8},"end":{"line":56,"column":9}}],"line":51}},"s":{"0":1,"1":1,"2":5,"3":5,"4":49,"5":13,"6":36,"7":28,"8":8,"9":49,"10":5,"11":5,"12":5,"13":26,"14":26,"15":26,"16":23,"17":23,"18":26,"19":21,"20":5,"21":2,"22":3,"23":1},"f":{"0":5,"1":49,"2":5},"b":{"0":[13,36],"1":[28,8],"2":[36,21],"3":[31,29],"4":[23,3],"5":[21,5],"6":[26,24],"7":[2,3]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/combat.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/combat.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,MAAM;IACf;;;;OAIG;IACH,YAA4B,QAAiB,EAAkB,QAAiB;QAApD,aAAQ,GAAR,QAAQ,CAAS;QAAkB,aAAQ,GAAR,QAAQ,CAAS;IAAI,CAAC;IAErF;;;;;OAKG;IACF,MAAM,CAAC,QAAiB,EAAE,QAAiB;QACxC,IAAI,aAAqB,CAAC;QAC1B,IAAI,QAAQ,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;YAAE,aAAa,GAAG,CAAC,CAAC;aAC9E,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC;YAAE,aAAa,GAAG,CAAC,CAAC;;YAC1I,aAAa,GAAG,GAAG,CAAC;QACzB,OAAO,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,GAAG,aAAa,CAAC,CAAC;IAC3F,CAAC;IAED;;;OAGG;IACF,KAAK;QACF,IAAI,GAAG,GAAW,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;QAC9C,IAAI,GAAG,GAAW,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;QAE9C,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,0BAA0B;YACvE,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,GAAG,GAAG,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;gBAC5C,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACpD;YAED,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,GAAG,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,GAAG,EAAE,CAAC,CAAC;aACjG;SACJ;QAED,IAAI,GAAG,IAAI,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SAC/C;aAAM;YACH,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SAC/C;IACL,CAAC;CACJ;AAjDD,wBAiDC","sourcesContent":["import {Fighter} from './fighter';\n\n/**\n * Class that represents a combat between two fighters\n */\nexport class Combat {\n    /**\n     * Creates a new combat between two Fighters\n     * @param fighter1 The first fighter\n     * @param fighter2 The second fighter\n     */\n    constructor(public readonly fighter1: Fighter, public readonly fighter2: Fighter) { }\n\n    /**\n     * Calculates the damage a fighter causes to another having in mind the universes they come from\n     * @param fighter1 The first fighter\n     * @param fighter2 The second fighter\n     * @returns The amount of damage\n     */\n     damage(fighter1: Fighter, fighter2: Fighter) {\n        let effectiveness: number;\n        if (fighter1.getStrongerThan().includes(fighter2.getUniverse())) effectiveness = 2;\n        else if ((fighter1.getEqualStrong().includes(fighter2.getUniverse())) || (fighter1.getUniverse() == fighter2.getUniverse())) effectiveness = 1;\n        else effectiveness = 0.5;\n        return (50 * (fighter1.getStats().attack/fighter2.getStats().defense) * effectiveness);\n    }\n\n    /**\n     * Simulates a fight\n     * @returns The winner of the combat\n     */\n     start() {\n        let HP1: number = this.fighter1.getStats().HP;\n        let HP2: number = this.fighter2.getStats().HP;\n\n        while ((HP1 > 0) && (HP2 > 0)) {\n            console.log(`${this.fighter1.getPhrase()}`); // Catching phrase WARNING\n            HP2 -= this.damage(this.fighter1, this.fighter2);\n            if (HP2 > 0) {\n                console.log(`${this.fighter2.getPhrase()}`);\n                HP1 -= this.damage(this.fighter2, this.fighter1);\n            }\n\n            if ((HP1 > 0) && (HP2 > 0)) {\n                console.log(`${this.fighter1.getName()} HP = ${HP1}\\n${this.fighter2.getName()} HP = ${HP2}`);\n            }\n        }\n\n        if (HP1 <= 0) {\n            return (`${this.fighter2.getName()} wins!`);\n        } else {\n            return (`${this.fighter1.getName()} wins!`);\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f730f70dcac59ce545a3de9aa273733b2d0f8478","contentHash":"6374e2dc4c0f31233c8f2c28ca3d81dd10aeb6ef3157fa22c7e2d41a067342d1"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/pokemon.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/pokemon.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":78}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":33}},"6":{"start":{"line":31,"column":8},"end":{"line":31,"column":29}},"7":{"start":{"line":38,"column":8},"end":{"line":38,"column":25}},"8":{"start":{"line":41,"column":0},"end":{"line":41,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":108},"end":{"line":25,"column":5}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":14},"end":{"line":39,"column":5}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":86},"end":{"line":21,"column":106}},"type":"default-arg","locations":[{"start":{"line":21,"column":97},"end":{"line":21,"column":106}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":8,"7":1,"8":1},"f":{"0":1,"1":8,"2":1},"b":{"0":[1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/pokemon.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/pokemon.ts"],"names":[],"mappings":";;;AAAA,uCAA8C;AAE9C;;GAEG;AACF,MAAa,OAAQ,SAAQ,iBAAO;IACjC;;;;;;;;;;;OAWG;IACH,YAAY,IAAY,EAAE,MAAc,EAAE,MAAc,EAAmB,IAAY,EAAE,KAAiB,EAAE,MAAc,EAAE,YAAsB,EAAE,WAAqB,EAAmB,WAAmB,SAAS;QACpN,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QADC,SAAI,GAAJ,IAAI,CAAQ;QAAqG,aAAQ,GAAR,QAAQ,CAAoB;IAExN,CAAC;IAED;;;OAGG;IACH,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED;;;OAGG;IACH,OAAO;QACH,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;CACJ;AAhCA,0BAgCA","sourcesContent":["import {Fighter, statistics} from './fighter';\n\n/**\n * Class that represents a Pokemon\n */\n export class Pokemon extends Fighter {\n    /**\n     * Creates a new Pokemon instance\n     * @param name Name of a Pokemon\n     * @param weight Weight of a Pokemon\n     * @param height Height of a Pokemon\n     * @param type Type of a Pokemon\n     * @param phrase Catching phrase of the character\n     * @param stats Other statistics of a Pokemon such as HP, Attack, etc. defined on a type\n     * @param strongerThan Universes the character is strong against\n     * @param equalStrong Universes against which the character is just as strong\n     * @param universe Universe from which it comes\n     */\n    constructor(name: string, weight: number, height: number, private readonly type: string, stats: statistics, phrase: string, strongerThan: string[], equalStrong: string[], private readonly universe: string = \"Pokemon\") {\n        super(name, weight, height, stats, phrase, strongerThan, equalStrong);\n    }\n\n    /**\n     * Obtains the universe from which the character comes\n     * @returns Universe\n     */\n    getUniverse() {\n        return this.universe;\n    }\n\n    /**\n     * Obtains the type of the pokemon\n     * @returns type\n     */\n    getType() {\n        return this.type;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0781bcde4109e4d8f8b019adb5d1727d857a7712","contentHash":"944136ffb07ffac68fb1d31e6ce4c26757a80e9b41d58f6e7309866d575cdf37"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/fighter.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/fighter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":29}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":29}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":27}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":29}},"7":{"start":{"line":24,"column":8},"end":{"line":24,"column":41}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":39}},"9":{"start":{"line":32,"column":8},"end":{"line":32,"column":25}},"10":{"start":{"line":39,"column":8},"end":{"line":39,"column":27}},"11":{"start":{"line":46,"column":8},"end":{"line":46,"column":27}},"12":{"start":{"line":53,"column":8},"end":{"line":53,"column":26}},"13":{"start":{"line":60,"column":8},"end":{"line":60,"column":27}},"14":{"start":{"line":67,"column":8},"end":{"line":67,"column":33}},"15":{"start":{"line":74,"column":8},"end":{"line":74,"column":32}},"16":{"start":{"line":77,"column":0},"end":{"line":77,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":80},"end":{"line":26,"column":5}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":14},"end":{"line":33,"column":5}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":16},"end":{"line":40,"column":5}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":16},"end":{"line":47,"column":5}},"line":45},"4":{"name":"(anonymous_4)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":15},"end":{"line":54,"column":5}},"line":52},"5":{"name":"(anonymous_5)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":16},"end":{"line":61,"column":5}},"line":59},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":22},"end":{"line":68,"column":5}},"line":66},"7":{"name":"(anonymous_7)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":21},"end":{"line":75,"column":5}},"line":73}},"branchMap":{},"s":{"0":1,"1":1,"2":6,"3":6,"4":6,"5":6,"6":6,"7":6,"8":6,"9":57,"10":1,"11":1,"12":108,"13":49,"14":49,"15":36,"16":1},"f":{"0":6,"1":57,"2":1,"3":1,"4":108,"5":49,"6":49,"7":36},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/fighter.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/fighter.ts"],"names":[],"mappings":";;;AAaA;;GAEG;AACH,MAAsB,OAAO;IACzB;;;;;;;;;OASG;IACH,YAA6B,IAAY,EAAmB,MAAc,EAAmB,MAAc,EAAmB,KAAiB,EAAmB,MAAc,EAAmB,YAAsB,EAAmB,WAAqB;QAApO,SAAI,GAAJ,IAAI,CAAQ;QAAmB,WAAM,GAAN,MAAM,CAAQ;QAAmB,WAAM,GAAN,MAAM,CAAQ;QAAmB,UAAK,GAAL,KAAK,CAAY;QAAmB,WAAM,GAAN,MAAM,CAAQ;QAAmB,iBAAY,GAAZ,YAAY,CAAU;QAAmB,gBAAW,GAAX,WAAW,CAAU;IAAI,CAAC;IAEtQ;;;OAGG;IACH,OAAO;QACH,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,eAAe;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACH,cAAc;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;CAOJ;AA1ED,0BA0EC","sourcesContent":["/**\n * The data type who contains the basic stats of a Fighter\n */\n export type statistics = {\n    total: number;\n    HP: number;\n    attack: number;\n    defense: number;\n    spatk: number;\n    spdef: number;\n    speed: number;\n}\n\n/**\n * Abstract class that represents a fighter\n */\nexport abstract class Fighter {\n    /**\n     * Creates a new character instance\n     * @param name Name of a character\n     * @param weight Weight of a character\n     * @param height Height of a character\n     * @param phrase Catching phrase of the character\n     * @param stats Other statistics of a character such as HP, Attack, etc. defined on a type\n     * @param strongerThan Universes the character is strong against\n     * @param equalStrong Universes against which the character is just as strong\n     */\n    constructor(private readonly name: string, private readonly weight: number, private readonly height: number, private readonly stats: statistics, private readonly phrase: string, private readonly strongerThan: string[], private readonly equalStrong: string[]) { }\n\n    /**\n     * Obtains the name of the character\n     * @returns Name\n     */\n    getName() {\n        return this.name;\n    }\n\n    /**\n     * Obtains the weight of the character\n     * @returns Weight\n     */\n    getWeight() {\n        return this.weight;\n    }\n\n    /**\n     * Obtains the height of the character\n     * @returns height\n     */\n    getHeight() {\n        return this.height;\n    }\n\n    /**\n     * Obtains the stats of the character\n     * @returns Array of stats\n     */\n    getStats() {\n        return this.stats;\n    }\n\n    /**\n     * Obtains the catching phrase of the character\n     * @returns phrase\n     */\n    getPhrase() {\n        return this.phrase;\n    }\n\n    /**\n     * Obtains the universes the character is strong against\n     * @returns Array of universes\n     */\n    getStrongerThan() {\n        return this.strongerThan;\n    }\n\n    /**\n     * Obtains the universes against which the character is just as strong\n     * @returns Array of universes\n     */\n    getEqualStrong() {\n        return this.equalStrong;\n    }\n\n    /**\n     * Obtains the universe from which the character comes\n     * @returns Universe\n     */\n    abstract getUniverse(): string;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"46bc02e4b70cbf9a3dc88e99770e874a513e4fda","contentHash":"4941e19a303438f35dcc734c00986fd67d2ff8ba37e354403b9aac45d0e2b550"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/dragonball.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/dragonball.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":78}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"5":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":106},"end":{"line":23,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":30,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":80},"end":{"line":20,"column":104}},"type":"default-arg","locations":[{"start":{"line":20,"column":91},"end":{"line":20,"column":104}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":67,"6":1},"f":{"0":2,"1":67},"b":{"0":[2]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/dragonball.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/dragonball.ts"],"names":[],"mappings":";;;AAAA,uCAA8C;AAE9C;;GAEG;AACF,MAAa,UAAW,SAAQ,iBAAO;IACpC;;;;;;;;;;OAUG;IACH,YAAY,IAAY,EAAE,MAAc,EAAE,MAAc,EAAE,KAAiB,EAAE,MAAc,EAAE,YAAsB,EAAE,WAAqB,EAAmB,WAAmB,aAAa;QACzL,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QADmF,aAAQ,GAAR,QAAQ,CAAwB;IAE7L,CAAC;IAED;;;OAGG;IACH,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CACJ;AAvBA,gCAuBA","sourcesContent":["import {Fighter, statistics} from './fighter';\n\n/**\n * Class that represents a DragonBall character\n */\n export class DragonBall extends Fighter {\n    /**\n     * Creates a new DragonBall character instance\n     * @param name Name of a DragonBall character\n     * @param weight Weight of a DragonBall character\n     * @param height Height of a DragonBall character\n     * @param phrase Catching phrase of the character\n     * @param stats Other statistics of a DragonBall character such as HP, Attack, etc. defined on a type\n     * @param strongerThan Universes the character is strong against\n     * @param equalStrong Universes against which the character is just as strong\n     * @param universe Universe from which it comes\n     */\n    constructor(name: string, weight: number, height: number, stats: statistics, phrase: string, strongerThan: string[], equalStrong: string[], private readonly universe: string = \"Dragon Ball\") {\n        super(name, weight, height, stats, phrase, strongerThan, equalStrong);\n    }\n\n    /**\n     * Obtains the universe from which the character comes\n     * @returns Universe\n     */\n    getUniverse() {\n        return this.universe;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"77af1c8b07e08328bacb0783e926ea00cc11c986","contentHash":"4a6ef1271cb5982a360d5c33b9327d7e644e66a05603ac6e87c5312a88eac09a"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/starwars.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/starwars.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":78}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"5":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":104},"end":{"line":23,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":30,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":80},"end":{"line":20,"column":102}},"type":"default-arg","locations":[{"start":{"line":20,"column":91},"end":{"line":20,"column":102}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":25,"6":1},"f":{"0":1,"1":25},"b":{"0":[1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/starwars.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/starwars.ts"],"names":[],"mappings":";;;AAAA,uCAA8C;AAE9C;;GAEG;AACF,MAAa,QAAS,SAAQ,iBAAO;IAClC;;;;;;;;;;OAUG;IACH,YAAY,IAAY,EAAE,MAAc,EAAE,MAAc,EAAE,KAAiB,EAAE,MAAc,EAAE,YAAsB,EAAE,WAAqB,EAAmB,WAAmB,WAAW;QACvL,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QADmF,aAAQ,GAAR,QAAQ,CAAsB;IAE3L,CAAC;IAED;;;OAGG;IACH,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CACJ;AAvBA,4BAuBA","sourcesContent":["import {Fighter, statistics} from './fighter';\n\n/**\n * Class that represents a StarWars character\n */\n export class StarWars extends Fighter {\n    /**\n     * Creates a new StarWars character instance\n     * @param name Name of a StarWars character\n     * @param weight Weight of a StarWars character\n     * @param height Height of a StarWars character\n     * @param phrase Catching phrase of the character\n     * @param stats Other statistics of a StarWars character such as HP, Attack, etc. defined on a type\n     * @param strongerThan Universes the character is strong against\n     * @param equalStrong Universes against which the character is just as strong\n     * @param universe Universe from which it comes\n     */\n    constructor(name: string, weight: number, height: number, stats: statistics, phrase: string, strongerThan: string[], equalStrong: string[], private readonly universe: string = \"Star Wars\") {\n        super(name, weight, height, stats, phrase, strongerThan, equalStrong);\n    }\n\n    /**\n     * Obtains the universe from which the character comes\n     * @returns Universe\n     */\n    getUniverse() {\n        return this.universe;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"232bbd3c75142c4767afd67036ea4aa2b3b44109","contentHash":"f4170f0896ec44d008ce9fdeabb8ef8a46d40999db9a7b0c50d0b31b0f105de2"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/marvel.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/marvel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":78}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"5":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":101},"end":{"line":23,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":30,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":80},"end":{"line":20,"column":99}},"type":"default-arg","locations":[{"start":{"line":20,"column":91},"end":{"line":20,"column":99}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":21,"6":1},"f":{"0":1,"1":21},"b":{"0":[1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/marvel.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/marvel.ts"],"names":[],"mappings":";;;AAAA,uCAA8C;AAE9C;;GAEG;AACF,MAAa,MAAO,SAAQ,iBAAO;IAChC;;;;;;;;;;OAUG;IACH,YAAY,IAAY,EAAE,MAAc,EAAE,MAAc,EAAE,KAAiB,EAAE,MAAc,EAAE,YAAsB,EAAE,WAAqB,EAAmB,WAAmB,QAAQ;QACpL,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QADmF,aAAQ,GAAR,QAAQ,CAAmB;IAExL,CAAC;IAED;;;OAGG;IACH,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CACJ;AAvBA,wBAuBA","sourcesContent":["import {Fighter, statistics} from './fighter';\n\n/**\n * Class that represents a Marvel character\n */\n export class Marvel extends Fighter {\n    /**\n     * Creates a new Marvel character instance\n     * @param name Name of a Marvel character\n     * @param weight Weight of a Marvel character\n     * @param height Height of a Marvel character\n     * @param phrase Catching phrase of the character\n     * @param stats Other statistics of a Marvel character such as HP, Attack, etc. defined on a type\n     * @param strongerThan Universes the character is strong against\n     * @param equalStrong Universes against which the character is just as strong\n     * @param universe Universe from which it comes\n     */\n    constructor(name: string, weight: number, height: number, stats: statistics, phrase: string, strongerThan: string[], equalStrong: string[], private readonly universe: string = \"Marvel\") {\n        super(name, weight, height, stats, phrase, strongerThan, equalStrong);\n    }\n\n    /**\n     * Obtains the universe from which the character comes\n     * @returns Universe\n     */\n    getUniverse() {\n        return this.universe;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bd60e3700d18b8b09696075649b628324feb2132","contentHash":"0dd6085c343a9740e3922fa59c01178c9b3a50691f4d266193f65b4135fdce02"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/dc.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/dc.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":20}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":78}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"5":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":97},"end":{"line":23,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":30,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":80},"end":{"line":20,"column":95}},"type":"default-arg","locations":[{"start":{"line":20,"column":91},"end":{"line":20,"column":95}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":6,"6":1},"f":{"0":1,"1":6},"b":{"0":[1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/dc.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/dc.ts"],"names":[],"mappings":";;;AAAA,uCAA8C;AAE9C;;GAEG;AACF,MAAa,EAAG,SAAQ,iBAAO;IAC5B;;;;;;;;;;OAUG;IACH,YAAY,IAAY,EAAE,MAAc,EAAE,MAAc,EAAE,KAAiB,EAAE,MAAc,EAAE,YAAsB,EAAE,WAAqB,EAAmB,WAAmB,IAAI;QAChL,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QADmF,aAAQ,GAAR,QAAQ,CAAe;IAEpL,CAAC;IAED;;;OAGG;IACH,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CACJ;AAvBA,gBAuBA","sourcesContent":["import {Fighter, statistics} from './fighter';\n\n/**\n * Class that represents a DC character\n */\n export class DC extends Fighter {\n    /**\n     * Creates a new DC character instance\n     * @param name Name of a DC character\n     * @param weight Weight of a DC character\n     * @param height Height of a DC character\n     * @param phrase Catching phrase of the character\n     * @param stats Other statistics of a DC character such as HP, Attack, etc. defined on a type\n     * @param strongerThan Universes the character is strong against\n     * @param equalStrong Universes against which the character is just as strong\n     * @param universe Universe from which it comes\n     */\n    constructor(name: string, weight: number, height: number, stats: statistics, phrase: string, strongerThan: string[], equalStrong: string[], private readonly universe: string = \"DC\") {\n        super(name, weight, height, stats, phrase, strongerThan, equalStrong);\n    }\n\n    /**\n     * Obtains the universe from which the character comes\n     * @returns Universe\n     */\n    getUniverse() {\n        return this.universe;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3befbbd0a83b7f756e4743b7974f42149fd885cf","contentHash":"525d3d2b2e38d44cc0947267021656a583ee9be676b8dcadbe1681f53f187049"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/encyclopedia.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/encyclopedia.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":39}},"3":{"start":{"line":19,"column":18},"end":{"line":19,"column":20}},"4":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"5":{"start":{"line":20,"column":21},"end":{"line":20,"column":22}},"6":{"start":{"line":21,"column":12},"end":{"line":21,"column":66}},"7":{"start":{"line":22,"column":12},"end":{"line":22,"column":61}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":47}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":19}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":29},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":12},"end":{"line":26,"column":5}},"line":18}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":5,"8":1,"9":1,"10":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/encyclopedia.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-1/encyclopedia.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACF,MAAa,YAAY;IACtB;;;OAGG;IACH,YAAmB,WAAsB;QAAtB,gBAAW,GAAX,WAAW,CAAW;IACzC,CAAC;IAED;;OAEG;IACH,KAAK;QACD,IAAI,GAAG,GAAW,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtD,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YACtD,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;SACpD;QACD,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACvC,OAAO,GAAG,CAAC;IACf,CAAC;CACJ;AApBA,oCAoBA","sourcesContent":["import {Fighter} from './fighter';\n\n/**\n * Class that represents the Encyclopedia, which contains lots of Pokemon\n */\n export class Encyclopedia {\n    /**\n     * Creates a new Encyclopedia instance\n     * @param allFighters An array that contains all Pokemon stored on the Encyclopedia\n     */\n    constructor(public allFighters: Fighter[]) {\n    }\n\n    /**\n     * Prints all elements of the Encyclopedia\n     */\n    print() {\n        let str: string = '';\n        for (let i: number = 0; i < this.allFighters.length; i++) {\n            console.log(`Name: ${this.allFighters[i].getName()}`);\n            str = str + this.allFighters[i].getName() + ', ';\n        }\n        str = str.substring(0, str.length - 2);\n        return str;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0556235e56be8aeacdd4ef68b4a3cf09e145eca9","contentHash":"541838e86529d1a0a37af68f95294d11a9bd5077c46af068146c6bf7a4234e51"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/length.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/length.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":81}},"3":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"4":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"5":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"6":{"start":{"line":22,"column":24},"end":{"line":22,"column":68}},"7":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"8":{"start":{"line":23,"column":24},"end":{"line":23,"column":66}},"9":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"10":{"start":{"line":24,"column":25},"end":{"line":24,"column":94}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":26}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":41}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":27},"end":{"line":29,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":92},"end":{"line":21,"column":93}},"loc":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":42},"end":{"line":22,"column":43}},"loc":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":42},"end":{"line":23,"column":43}},"loc":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},{"start":{"line":21,"column":8},"end":{"line":28,"column":41}}],"line":21},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":128}},"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":68}},{"start":{"line":21,"column":74},"end":{"line":21,"column":127}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":1,"7":3,"8":1,"9":3,"10":1,"11":1,"12":0,"13":1},"f":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/length.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/length.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,MAAM;IAGf;;OAEG;IACH;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,KAAuB,EAAE,MAAc;QAC3C,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACrH,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC3E,IAAI,MAAM,GAAqB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,OAAO,MAAM,CAAC;SACjB;;YAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;CACJ;AAxBD,wBAwBC","sourcesContent":["import {isConvertible} from './convertible';\n\n/**\n * Class that represents length measurement units\n */\nexport class Length implements isConvertible<[string, number]> {\n    units: [string, number][];\n\n    /**\n     * Inserts some units to an array and their equivalents\n     */\n    constructor() {\n        this.units = [['meters', 1], ['miles', 0.000621371], ['yards', 1.09361]];\n    }\n\n    /**\n     * Performs the unit conversion\n     * @param first Unit we want to convert\n     * @param second Unit in which we want to convert the first\n     * @returns A tuple with the result of the conversion\n     */\n    convert(first: [string, number], second: string): [string, number] {\n        if((this.units.filter((x) => (x[0] == first[0])).length > 0) && (this.units.filter((x) => (x[0] == second)).length > 0)) {\n            let conv1: [string, number][] = this.units.filter((x) => (x[0] == first[0]));\n            let conv2: [string, number][] = this.units.filter((x) => (x[0] == second));\n            let result: [string, number] = [second, Number(((first[1] * conv2[0][1]) / conv1[0][1]).toFixed(1))];\n            return result;\n        } else return ['Unit not found', 0];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ef8f9a1a441c46544cb0e371a8e0634fbd625564","contentHash":"549be2c5b49481001be0de4c145c8ba160113362ac1729f9132ad7f50f5272ee"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/mass.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/mass.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":81}},"3":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"4":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"5":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"6":{"start":{"line":22,"column":24},"end":{"line":22,"column":68}},"7":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"8":{"start":{"line":23,"column":24},"end":{"line":23,"column":66}},"9":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"10":{"start":{"line":24,"column":25},"end":{"line":24,"column":94}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":26}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":41}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":27},"end":{"line":29,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":92},"end":{"line":21,"column":93}},"loc":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":42},"end":{"line":22,"column":43}},"loc":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":42},"end":{"line":23,"column":43}},"loc":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},{"start":{"line":21,"column":8},"end":{"line":28,"column":41}}],"line":21},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":128}},"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":68}},{"start":{"line":21,"column":74},"end":{"line":21,"column":127}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":1,"7":3,"8":1,"9":3,"10":1,"11":1,"12":0,"13":1},"f":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/mass.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/mass.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,IAAI;IAGb;;OAEG;IACH;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,KAAuB,EAAE,MAAc;QAC3C,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACrH,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC3E,IAAI,MAAM,GAAqB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,OAAO,MAAM,CAAC;SACjB;;YAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;CACJ;AAxBD,oBAwBC","sourcesContent":["import {isConvertible} from './convertible';\n\n/**\n * Class that represents mass measurement units\n */\nexport class Mass implements isConvertible<[string, number]> {\n    units: [string, number][];\n\n    /**\n     * Inserts some units to an array and their equivalents\n     */\n    constructor() {\n        this.units = [['kilograms', 1], ['grams', 1000], ['miligrams', 1000000]];\n    }\n\n    /**\n     * Performs the unit conversion\n     * @param first Unit we want to convert\n     * @param second Unit in which we want to convert the first\n     * @returns A tuple with the result of the conversion\n     */\n    convert(first: [string, number], second: string): [string, number] {\n        if((this.units.filter((x) => (x[0] == first[0])).length > 0) && (this.units.filter((x) => (x[0] == second)).length > 0)) {\n            let conv1: [string, number][] = this.units.filter((x) => (x[0] == first[0]));\n            let conv2: [string, number][] = this.units.filter((x) => (x[0] == second));\n            let result: [string, number] = [second, Number(((first[1] * conv2[0][1]) / conv1[0][1]).toFixed(1))];\n            return result;\n        } else return ['Unit not found', 0];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cbc748b30fd32a1ec9304d0d7e7eb73340142017","contentHash":"18905e9a3e8b42f8a77aca12769bbdba883d88d72a3b491b329b8f3e3d8bf0da"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/speed.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/speed.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":78}},"3":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"4":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"5":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"6":{"start":{"line":22,"column":24},"end":{"line":22,"column":68}},"7":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"8":{"start":{"line":23,"column":24},"end":{"line":23,"column":66}},"9":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"10":{"start":{"line":24,"column":25},"end":{"line":24,"column":94}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":26}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":41}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":27},"end":{"line":29,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":92},"end":{"line":21,"column":93}},"loc":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":42},"end":{"line":22,"column":43}},"loc":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":42},"end":{"line":23,"column":43}},"loc":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},{"start":{"line":21,"column":8},"end":{"line":28,"column":41}}],"line":21},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":128}},"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":68}},{"start":{"line":21,"column":74},"end":{"line":21,"column":127}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":1,"7":2,"8":1,"9":2,"10":1,"11":1,"12":0,"13":1},"f":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/speed.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/speed.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,KAAK;IAGd;;OAEG;IACH;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,KAAuB,EAAE,MAAc;QAC3C,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACrH,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC3E,IAAI,MAAM,GAAqB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,OAAO,MAAM,CAAC;SACjB;;YAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;CACJ;AAxBD,sBAwBC","sourcesContent":["import {isConvertible} from './convertible';\n\n/**\n * Class that represents speed measurement units\n */\nexport class Speed implements isConvertible<[string, number]> {\n    units: [string, number][];\n\n    /**\n     * Inserts some units to an array and their equivalents\n     */\n    constructor() {\n        this.units = [['meters per second', 1], ['kilometers per hour', 3.6]];\n    }\n\n    /**\n     * Performs the unit conversion\n     * @param first Unit we want to convert\n     * @param second Unit in which we want to convert the first\n     * @returns A tuple with the result of the conversion\n     */\n    convert(first: [string, number], second: string): [string, number] {\n        if((this.units.filter((x) => (x[0] == first[0])).length > 0) && (this.units.filter((x) => (x[0] == second)).length > 0)) {\n            let conv1: [string, number][] = this.units.filter((x) => (x[0] == first[0]));\n            let conv2: [string, number][] = this.units.filter((x) => (x[0] == second));\n            let result: [string, number] = [second, Number(((first[1] * conv2[0][1]) / conv1[0][1]).toFixed(1))];\n            return result;\n        } else return ['Unit not found', 0];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1127c0c6610dbff87b0c36b7b9197c8877100603","contentHash":"55c2839538fda7ba2ebef6591c95f4ff3068c1afba5d5b913ebe1ba0cfc64215"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/strength.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/strength.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":59}},"3":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"4":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"5":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"6":{"start":{"line":22,"column":24},"end":{"line":22,"column":68}},"7":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"8":{"start":{"line":23,"column":24},"end":{"line":23,"column":66}},"9":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"10":{"start":{"line":24,"column":25},"end":{"line":24,"column":94}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":26}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":41}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":27},"end":{"line":29,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":92},"end":{"line":21,"column":93}},"loc":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":42},"end":{"line":22,"column":43}},"loc":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":42},"end":{"line":23,"column":43}},"loc":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},{"start":{"line":21,"column":8},"end":{"line":28,"column":41}}],"line":21},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":128}},"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":68}},{"start":{"line":21,"column":74},"end":{"line":21,"column":127}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":1,"7":2,"8":1,"9":2,"10":1,"11":1,"12":0,"13":1},"f":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/strength.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/strength.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,QAAQ;IAGjB;;OAEG;IACH;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,KAAuB,EAAE,MAAc;QAC3C,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACrH,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC3E,IAAI,MAAM,GAAqB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,OAAO,MAAM,CAAC;SACjB;;YAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;CACJ;AAxBD,4BAwBC","sourcesContent":["import {isConvertible} from './convertible';\n\n/**\n * Class that represents strength measurement units\n */\nexport class Strength implements isConvertible<[string, number]> {\n    units: [string, number][];\n\n    /**\n     * Inserts some units to an array and their equivalents\n     */\n    constructor() {\n        this.units = [['newtons', 9.81], ['kiloponds', 1]];\n    }\n\n    /**\n     * Performs the unit conversion\n     * @param first Unit we want to convert\n     * @param second Unit in which we want to convert the first\n     * @returns A tuple with the result of the conversion\n     */\n    convert(first: [string, number], second: string): [string, number] {\n        if((this.units.filter((x) => (x[0] == first[0])).length > 0) && (this.units.filter((x) => (x[0] == second)).length > 0)) {\n            let conv1: [string, number][] = this.units.filter((x) => (x[0] == first[0]));\n            let conv2: [string, number][] = this.units.filter((x) => (x[0] == second));\n            let result: [string, number] = [second, Number(((first[1] * conv2[0][1]) / conv1[0][1]).toFixed(1))];\n            return result;\n        } else return ['Unit not found', 0];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"639104c9b480f1f97251f1a191321d2145a567ce","contentHash":"579830da79cc66307dcf1875921d72ef22f07ee59711bd6af894473e248e2eb3"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/temperature.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/temperature.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":76}},"3":{"start":{"line":21,"column":8},"end":{"line":52,"column":41}},"4":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"5":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"6":{"start":{"line":24,"column":25},"end":{"line":24,"column":32}},"7":{"start":{"line":25,"column":12},"end":{"line":48,"column":13}},"8":{"start":{"line":26,"column":16},"end":{"line":31,"column":17}},"9":{"start":{"line":27,"column":20},"end":{"line":27,"column":80}},"10":{"start":{"line":29,"column":21},"end":{"line":31,"column":17}},"11":{"start":{"line":30,"column":20},"end":{"line":30,"column":78}},"12":{"start":{"line":33,"column":17},"end":{"line":48,"column":13}},"13":{"start":{"line":34,"column":16},"end":{"line":39,"column":17}},"14":{"start":{"line":35,"column":20},"end":{"line":35,"column":91}},"15":{"start":{"line":37,"column":21},"end":{"line":39,"column":17}},"16":{"start":{"line":38,"column":20},"end":{"line":38,"column":78}},"17":{"start":{"line":41,"column":17},"end":{"line":48,"column":13}},"18":{"start":{"line":42,"column":16},"end":{"line":47,"column":17}},"19":{"start":{"line":43,"column":20},"end":{"line":43,"column":95}},"20":{"start":{"line":45,"column":21},"end":{"line":47,"column":17}},"21":{"start":{"line":46,"column":20},"end":{"line":46,"column":82}},"22":{"start":{"line":49,"column":12},"end":{"line":49,"column":26}},"23":{"start":{"line":52,"column":12},"end":{"line":52,"column":41}},"24":{"start":{"line":55,"column":0},"end":{"line":55,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":27},"end":{"line":53,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":92},"end":{"line":21,"column":93}},"loc":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":52,"column":41}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":52,"column":41}},{"start":{"line":21,"column":8},"end":{"line":52,"column":41}}],"line":21},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":128}},"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":68}},{"start":{"line":21,"column":74},"end":{"line":21,"column":127}}],"line":21},"2":{"loc":{"start":{"line":25,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":48,"column":13}},{"start":{"line":25,"column":12},"end":{"line":48,"column":13}}],"line":25},"3":{"loc":{"start":{"line":26,"column":16},"end":{"line":31,"column":17}},"type":"if","locations":[{"start":{"line":26,"column":16},"end":{"line":31,"column":17}},{"start":{"line":26,"column":16},"end":{"line":31,"column":17}}],"line":26},"4":{"loc":{"start":{"line":29,"column":21},"end":{"line":31,"column":17}},"type":"if","locations":[{"start":{"line":29,"column":21},"end":{"line":31,"column":17}},{"start":{"line":29,"column":21},"end":{"line":31,"column":17}}],"line":29},"5":{"loc":{"start":{"line":33,"column":17},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":33,"column":17},"end":{"line":48,"column":13}},{"start":{"line":33,"column":17},"end":{"line":48,"column":13}}],"line":33},"6":{"loc":{"start":{"line":34,"column":16},"end":{"line":39,"column":17}},"type":"if","locations":[{"start":{"line":34,"column":16},"end":{"line":39,"column":17}},{"start":{"line":34,"column":16},"end":{"line":39,"column":17}}],"line":34},"7":{"loc":{"start":{"line":37,"column":21},"end":{"line":39,"column":17}},"type":"if","locations":[{"start":{"line":37,"column":21},"end":{"line":39,"column":17}},{"start":{"line":37,"column":21},"end":{"line":39,"column":17}}],"line":37},"8":{"loc":{"start":{"line":41,"column":17},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":17},"end":{"line":48,"column":13}},{"start":{"line":41,"column":17},"end":{"line":48,"column":13}}],"line":41},"9":{"loc":{"start":{"line":42,"column":16},"end":{"line":47,"column":17}},"type":"if","locations":[{"start":{"line":42,"column":16},"end":{"line":47,"column":17}},{"start":{"line":42,"column":16},"end":{"line":47,"column":17}}],"line":42},"10":{"loc":{"start":{"line":45,"column":21},"end":{"line":47,"column":17}},"type":"if","locations":[{"start":{"line":45,"column":21},"end":{"line":47,"column":17}},{"start":{"line":45,"column":21},"end":{"line":47,"column":17}}],"line":45}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1},"f":{"0":1,"1":1,"2":3,"3":3},"b":{"0":[1,0],"1":[1,1],"2":[1,0],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/temperature.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/temperature.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,WAAW;IAGpB;;OAEG;IACH;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,KAAuB,EAAE,MAAc;QAC3C,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACrH,gFAAgF;YAChF,8EAA8E;YAC9E,IAAI,MAAM,GAAqB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACvC,IAAG,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;gBACtB,IAAI,MAAM,IAAI,YAAY,EAAE;oBACxB,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC/D;qBAAM,IAAI,MAAM,IAAI,QAAQ,EAAE;oBAC3B,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7D;aACJ;iBAAM,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;gBAC7B,IAAI,MAAM,IAAI,YAAY,EAAE;oBACxB,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC1E;qBAAM,IAAI,MAAM,IAAI,SAAS,EAAE;oBAC5B,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7D;aACJ;iBAAM,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE;gBACjC,IAAI,MAAM,IAAI,QAAQ,EAAE;oBACpB,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5E;qBAAM,IAAI,MAAM,IAAI,SAAS,EAAE;oBAC5B,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjE;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;;YAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;CACJ;AA3CD,kCA2CC","sourcesContent":["import {isConvertible} from './convertible';\n\n/**\n * Class that represents temperature measurement units\n */\nexport class Temperature implements isConvertible<[string, number]> {\n    units: [string, number][];\n\n    /**\n     * Inserts some units to an array and their equivalents\n     */\n    constructor() {\n        this.units = [['celsius', 10], ['kelvin', 283], ['fahrenheit', 50]];\n    }\n\n    /**\n     * Performs the unit conversion\n     * @param first Unit we want to convert\n     * @param second Unit in which we want to convert the first\n     * @returns A tuple with the result of the conversion\n     */\n    convert(first: [string, number], second: string): [string, number] {\n        if((this.units.filter((x) => (x[0] == first[0])).length > 0) && (this.units.filter((x) => (x[0] == second)).length > 0)) {\n            // let conv1: [string, number][] = this.units.filter((x) => (x[0] == first[0]));\n            // let conv2: [string, number][] = this.units.filter((x) => (x[0] == second));\n            let result: [string, number] = ['', 0];\n            if(first[0] == 'celsius') {\n                if (second == 'fahrenheit') {\n                    result = [second, Number((first[1] * 1.8 + 32).toFixed(1))];\n                } else if (second == 'kelvin') {\n                    result = [second, Number((first[1] + 273.15).toFixed(1))];\n                }\n            } else if (first[0] == 'kelvin') {\n                if (second == 'fahrenheit') {\n                    result = [second, Number((1.8 * (first[1] - 273.15) + 32).toFixed(1))];\n                } else if (second == 'celsius') {\n                    result = [second, Number((first[1] - 273.15).toFixed(1))];\n                }\n            } else if (first[0] == 'fahrenheit') {\n                if (second == 'kelvin') {\n                    result = [second, Number(((5/9) * (first[1] - 32) + 273.15).toFixed(1))];\n                } else if (second == 'celsius') {\n                    result = [second, Number(((first[1] - 32) / 1.8).toFixed(1))];\n                }\n            }\n            return result;\n        } else return ['Unit not found', 0];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fd5862c091ba3a697d9c7ca43bf66224bdb011e9","contentHash":"91f4ddcbbc2c2c980e8226df19dbe5604ec3dfca17b044190d75fa39a654d69c"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/time.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/time.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":72}},"3":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"4":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"5":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"6":{"start":{"line":22,"column":24},"end":{"line":22,"column":68}},"7":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"8":{"start":{"line":23,"column":24},"end":{"line":23,"column":66}},"9":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"10":{"start":{"line":24,"column":25},"end":{"line":24,"column":94}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":26}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":41}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":27},"end":{"line":29,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":92},"end":{"line":21,"column":93}},"loc":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":42},"end":{"line":22,"column":43}},"loc":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":42},"end":{"line":23,"column":43}},"loc":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},{"start":{"line":21,"column":8},"end":{"line":28,"column":41}}],"line":21},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":128}},"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":68}},{"start":{"line":21,"column":74},"end":{"line":21,"column":127}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":2,"4":6,"5":6,"6":1,"7":3,"8":1,"9":3,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":2,"2":6,"3":6,"4":3,"5":3},"b":{"0":[1,1],"1":[2,2]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/time.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/time.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,IAAI;IAGb;;OAEG;IACH;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IACpE,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,KAAuB,EAAE,MAAc;QAC3C,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACrH,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC3E,IAAI,MAAM,GAAqB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,OAAO,MAAM,CAAC;SACjB;;YAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;CACJ;AAxBD,oBAwBC","sourcesContent":["import {isConvertible} from './convertible';\n\n/**\n * Class that represents time measurement units\n */\nexport class Time implements isConvertible<[string, number]> {\n    units: [string, number][];\n\n    /**\n     * Inserts some units to an array and their equivalents\n     */\n    constructor() {\n        this.units = [['hours', 1], ['minutes', 60], ['seconds', 3600]];\n    }\n\n    /**\n     * Performs the unit conversion\n     * @param first Unit we want to convert\n     * @param second Unit in which we want to convert the first\n     * @returns A tuple with the result of the conversion\n     */\n    convert(first: [string, number], second: string): [string, number] {\n        if((this.units.filter((x) => (x[0] == first[0])).length > 0) && (this.units.filter((x) => (x[0] == second)).length > 0)) {\n            let conv1: [string, number][] = this.units.filter((x) => (x[0] == first[0]));\n            let conv2: [string, number][] = this.units.filter((x) => (x[0] == second));\n            let result: [string, number] = [second, Number(((first[1] * conv2[0][1]) / conv1[0][1]).toFixed(1))];\n            return result;\n        } else return ['Unit not found', 0];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"db2e38ac6805203274862ab572b604d025b49c56","contentHash":"c37e0c69cfb4fd4e39d46e2e5821111851677d8b4e7b270527583dbda0c5bcca"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/volume.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/volume.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":64}},"3":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"4":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"5":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"6":{"start":{"line":22,"column":24},"end":{"line":22,"column":68}},"7":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"8":{"start":{"line":23,"column":24},"end":{"line":23,"column":66}},"9":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"10":{"start":{"line":24,"column":25},"end":{"line":24,"column":94}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":26}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":41}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":27},"end":{"line":29,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":39},"end":{"line":21,"column":55}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":92},"end":{"line":21,"column":93}},"loc":{"start":{"line":21,"column":100},"end":{"line":21,"column":114}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":42},"end":{"line":22,"column":43}},"loc":{"start":{"line":22,"column":50},"end":{"line":22,"column":66}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":42},"end":{"line":23,"column":43}},"loc":{"start":{"line":23,"column":50},"end":{"line":23,"column":64}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":28,"column":41}},{"start":{"line":21,"column":8},"end":{"line":28,"column":41}}],"line":21},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":128}},"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":68}},{"start":{"line":21,"column":74},"end":{"line":21,"column":127}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":1,"7":3,"8":1,"9":3,"10":1,"11":1,"12":0,"13":1},"f":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/volume.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-2/volume.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,MAAM;IAGf;;OAEG;IACH;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,KAAuB,EAAE,MAAc;QAC3C,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACrH,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,KAAK,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC3E,IAAI,MAAM,GAAqB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,OAAO,MAAM,CAAC;SACjB;;YAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;CACJ;AAxBD,wBAwBC","sourcesContent":["import {isConvertible} from './convertible';\n\n/**\n * Class that represents volume measurement units\n */\nexport class Volume implements isConvertible<[string, number]> {\n    units: [string, number][];\n\n    /**\n     * Inserts some units to an array and their equivalents\n     */\n    constructor() {\n        this.units = [['litres', 1], ['dm3', 1], ['m3', 0.001]];\n    }\n\n    /**\n     * Performs the unit conversion\n     * @param first Unit we want to convert\n     * @param second Unit in which we want to convert the first\n     * @returns A tuple with the result of the conversion\n     */\n    convert(first: [string, number], second: string): [string, number] {\n        if((this.units.filter((x) => (x[0] == first[0])).length > 0) && (this.units.filter((x) => (x[0] == second)).length > 0)) {\n            let conv1: [string, number][] = this.units.filter((x) => (x[0] == first[0]));\n            let conv2: [string, number][] = this.units.filter((x) => (x[0] == second));\n            let result: [string, number] = [second, Number(((first[1] * conv2[0][1]) / conv1[0][1]).toFixed(1))];\n            return result;\n        } else return ['Unit not found', 0];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5d8fc5b2f8e9c1fe55d3524ee9a0fd00fc8af832","contentHash":"2d2cb44c7fe8edbabf081ff4631b804b9e9dde508f059664d3e1822bd13abcce"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/films.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/films.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"5":{"start":{"line":23,"column":21},"end":{"line":23,"column":23}},"6":{"start":{"line":24,"column":8},"end":{"line":44,"column":9}},"7":{"start":{"line":26,"column":16},"end":{"line":26,"column":75}},"8":{"start":{"line":26,"column":56},"end":{"line":26,"column":72}},"9":{"start":{"line":27,"column":16},"end":{"line":27,"column":30}},"10":{"start":{"line":28,"column":16},"end":{"line":28,"column":22}},"11":{"start":{"line":30,"column":16},"end":{"line":30,"column":85}},"12":{"start":{"line":30,"column":56},"end":{"line":30,"column":82}},"13":{"start":{"line":31,"column":16},"end":{"line":31,"column":30}},"14":{"start":{"line":32,"column":16},"end":{"line":32,"column":22}},"15":{"start":{"line":34,"column":16},"end":{"line":34,"column":89}},"16":{"start":{"line":34,"column":56},"end":{"line":34,"column":86}},"17":{"start":{"line":35,"column":16},"end":{"line":35,"column":30}},"18":{"start":{"line":36,"column":16},"end":{"line":36,"column":22}},"19":{"start":{"line":38,"column":16},"end":{"line":38,"column":75}},"20":{"start":{"line":38,"column":56},"end":{"line":38,"column":72}},"21":{"start":{"line":39,"column":16},"end":{"line":39,"column":30}},"22":{"start":{"line":40,"column":16},"end":{"line":40,"column":22}},"23":{"start":{"line":42,"column":16},"end":{"line":42,"column":26}},"24":{"start":{"line":43,"column":16},"end":{"line":43,"column":22}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":26}},"26":{"start":{"line":53,"column":0},"end":{"line":53,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":23},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":27},"end":{"line":45,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":48},"end":{"line":26,"column":49}},"loc":{"start":{"line":26,"column":56},"end":{"line":26,"column":72}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":48},"end":{"line":30,"column":49}},"loc":{"start":{"line":30,"column":56},"end":{"line":30,"column":82}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":48},"end":{"line":34,"column":49}},"loc":{"start":{"line":34,"column":56},"end":{"line":34,"column":86}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":48},"end":{"line":38,"column":49}},"loc":{"start":{"line":38,"column":56},"end":{"line":38,"column":72}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":15},"end":{"line":51,"column":5}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":44,"column":9}},"type":"switch","locations":[{"start":{"line":25,"column":12},"end":{"line":28,"column":22}},{"start":{"line":29,"column":12},"end":{"line":32,"column":22}},{"start":{"line":33,"column":12},"end":{"line":36,"column":22}},{"start":{"line":37,"column":12},"end":{"line":40,"column":22}},{"start":{"line":41,"column":12},"end":{"line":43,"column":22}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":1,"8":3,"9":1,"10":0,"11":1,"12":3,"13":1,"14":0,"15":1,"16":3,"17":1,"18":0,"19":1,"20":3,"21":1,"22":0,"23":0,"24":0,"25":4,"26":1},"f":{"0":1,"1":4,"2":3,"3":3,"4":3,"5":3,"6":4},"b":{"0":[1,1,1,1,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/films.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/films.ts"],"names":[],"mappings":";;;AAAA,mCAAkD;AAgBlD;;GAEG;AACH,MAAa,KAAM,SAAQ,iCAA+B;IACtD;;;OAGG;IACH,YAAsB,KAAa;QAC/B,KAAK,CAAC,KAAK,CAAC,CAAC;QADK,UAAK,GAAL,KAAK,CAAQ;IAEjC,CAAC;IAEH;;;;OAIG;IACH,QAAQ,CAAC,KAAa,EAAE,KAAa;QACjC,IAAI,MAAM,GAAW,EAAE,CAAC;QACxB,QAAQ,KAAK,EAAE;YACX,KAAK,CAAC,OAAO,CAAC;gBACV,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3D,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,MAAM,CAAC;gBACT,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;gBACrE,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,UAAU,CAAC;gBACb,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;gBACzE,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,OAAO,CAAC;gBACV,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3D,OAAO,MAAM,CAAC;gBACd,MAAM;YACV;gBACI,OAAO,EAAE,CAAC;gBACV,MAAM;SACb;IACL,CAAC;IAEA;;MAEE;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;CACJ;AA7CD,sBA6CC","sourcesContent":["import {BasicStreamableCollection} from \"./basic\";\n\n/**\n * Attributes that a film has\n * @param title Title of the film\n * @param year Year when it was released\n * @param duration How much time it lasts\n * @param genre Genre of the film\n */\nexport type film = {\n    title: string;\n    year: number;\n    duration: number;\n    genre: string;\n}\n\n/**\n * Class that represents a collection of films\n */\nexport class Films extends BasicStreamableCollection<film> {\n    /**\n     * Creates a new instance of a collection\n     * @param items Collection of films\n     */\n    constructor(protected items: film[]) {\n        super(items);\n      }\n\n    /**\n     * Allows to search items by a value like title, year, etc.\n     * @param param The parameter you want to search by\n     * @param value The value of the parameter\n     */\n    searchBy(param: string, value: string) {\n        let result: film[] = [];\n        switch (param) {\n            case ('title'):\n                result = this.getItems().filter((x) => (x.title == value));\n                return result;\n                break;\n            case ('year'):\n                result = this.getItems().filter((x) => (x.year.toString() == value));\n                return result;\n                break;\n            case ('duration'):\n                result = this.getItems().filter((x) => (x.duration.toString() == value));\n                return result;\n                break;\n            case ('genre'):\n                result = this.getItems().filter((x) => (x.genre == value));\n                return result;\n                break;\n            default:\n                return [];\n                break;\n        }\n    }\n\n     /**\n     * Returns the collection\n     */\n    getItems() {\n        return this.items;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1dadac1ee6b563012b9927d37bb79f44d7485717","contentHash":"2ee0acc16f845677ced21ab56830083cc5c54915b583ff57fb2093d05c8700a5"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/basic.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/basic.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":33}},"4":{"start":{"line":27,"column":8},"end":{"line":27,"column":33}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":23},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":21},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":23},"end":{"line":28,"column":5}},"line":26}},"branchMap":{},"s":{"0":1,"1":1,"2":3,"3":1,"4":1,"5":1},"f":{"0":3,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/basic.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/basic.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAsB,yBAAyB;IAC3C;;;OAGG;IACH,YAAsB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAChC,CAAC;IASD;;;OAGG;IACH,OAAO,CAAC,OAAU;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAOD;;;OAGG;IACH,gBAAgB;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;CACJ;AAnCD,8DAmCC","sourcesContent":["import {StreamableSearchable} from \"./searchable\";\n\n/**\n * Class that represents a collection of items that can be streamable and searchable\n */\nexport abstract class BasicStreamableCollection<T> implements StreamableSearchable<T> {\n    /**\n     * Creates a new instance of a streamable collection\n     * @param items Collection of items\n     */\n    constructor(protected items: T[]) {\n    }\n\n    /**\n     * Allows to search items by a value like title, year, etc.\n     * @param param The parameter you want to search by\n     * @param value The value of the parameter\n     */\n    abstract searchBy(param: string, value: string): T[];\n\n    /**\n     * Allows to insert a new item to the collection\n     * @param newItem Item we want to insert\n     */\n    addItem(newItem: T) {\n        this.items.push(newItem);\n    }\n\n    /**\n     * Returns the collection\n     */\n    abstract getItems(): T[];\n\n    /**\n     * Obtains the length of the collection\n     * @returns Length of the collection\n     */\n    getNumberOfItems() {\n        return this.items.length;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5229a5a89deb748d7f788800012df121c8be90a4","contentHash":"bdd5ec8571da050944fc956a61f36193996e752395048a0b9f373a489d61b413"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/series.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/series.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"5":{"start":{"line":23,"column":21},"end":{"line":23,"column":23}},"6":{"start":{"line":24,"column":8},"end":{"line":48,"column":9}},"7":{"start":{"line":26,"column":16},"end":{"line":26,"column":75}},"8":{"start":{"line":26,"column":56},"end":{"line":26,"column":72}},"9":{"start":{"line":27,"column":16},"end":{"line":27,"column":30}},"10":{"start":{"line":28,"column":16},"end":{"line":28,"column":22}},"11":{"start":{"line":30,"column":16},"end":{"line":30,"column":85}},"12":{"start":{"line":30,"column":56},"end":{"line":30,"column":82}},"13":{"start":{"line":31,"column":16},"end":{"line":31,"column":30}},"14":{"start":{"line":32,"column":16},"end":{"line":32,"column":22}},"15":{"start":{"line":34,"column":16},"end":{"line":34,"column":88}},"16":{"start":{"line":34,"column":56},"end":{"line":34,"column":85}},"17":{"start":{"line":35,"column":16},"end":{"line":35,"column":30}},"18":{"start":{"line":36,"column":16},"end":{"line":36,"column":22}},"19":{"start":{"line":38,"column":16},"end":{"line":38,"column":89}},"20":{"start":{"line":38,"column":56},"end":{"line":38,"column":86}},"21":{"start":{"line":39,"column":16},"end":{"line":39,"column":30}},"22":{"start":{"line":40,"column":16},"end":{"line":40,"column":22}},"23":{"start":{"line":42,"column":16},"end":{"line":42,"column":75}},"24":{"start":{"line":42,"column":56},"end":{"line":42,"column":72}},"25":{"start":{"line":43,"column":16},"end":{"line":43,"column":30}},"26":{"start":{"line":44,"column":16},"end":{"line":44,"column":22}},"27":{"start":{"line":46,"column":16},"end":{"line":46,"column":26}},"28":{"start":{"line":47,"column":16},"end":{"line":47,"column":22}},"29":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"30":{"start":{"line":57,"column":0},"end":{"line":57,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":23},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":27},"end":{"line":49,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":48},"end":{"line":26,"column":49}},"loc":{"start":{"line":26,"column":56},"end":{"line":26,"column":72}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":48},"end":{"line":30,"column":49}},"loc":{"start":{"line":30,"column":56},"end":{"line":30,"column":82}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":48},"end":{"line":34,"column":49}},"loc":{"start":{"line":34,"column":56},"end":{"line":34,"column":85}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":48},"end":{"line":38,"column":49}},"loc":{"start":{"line":38,"column":56},"end":{"line":38,"column":86}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":48},"end":{"line":42,"column":49}},"loc":{"start":{"line":42,"column":56},"end":{"line":42,"column":72}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":15},"end":{"line":55,"column":5}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":48,"column":9}},"type":"switch","locations":[{"start":{"line":25,"column":12},"end":{"line":28,"column":22}},{"start":{"line":29,"column":12},"end":{"line":32,"column":22}},{"start":{"line":33,"column":12},"end":{"line":36,"column":22}},{"start":{"line":37,"column":12},"end":{"line":40,"column":22}},{"start":{"line":41,"column":12},"end":{"line":44,"column":22}},{"start":{"line":45,"column":12},"end":{"line":47,"column":22}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":5,"6":5,"7":1,"8":3,"9":1,"10":0,"11":1,"12":3,"13":1,"14":0,"15":1,"16":3,"17":1,"18":0,"19":1,"20":3,"21":1,"22":0,"23":1,"24":3,"25":1,"26":0,"27":0,"28":0,"29":5,"30":1},"f":{"0":1,"1":5,"2":3,"3":3,"4":3,"5":3,"6":3,"7":5},"b":{"0":[1,1,1,1,1,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/series.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/series.ts"],"names":[],"mappings":";;;AAAA,mCAAkD;AAkBlD;;GAEG;AACH,MAAa,MAAO,SAAQ,iCAAgC;IACxD;;;OAGG;IACH,YAAsB,KAAc;QAChC,KAAK,CAAC,KAAK,CAAC,CAAC;QADK,UAAK,GAAL,KAAK,CAAS;IAElC,CAAC;IAEH;;;;OAIG;IACH,QAAQ,CAAC,KAAa,EAAE,KAAa;QACjC,IAAI,MAAM,GAAY,EAAE,CAAC;QACzB,QAAQ,KAAK,EAAE;YACX,KAAK,CAAC,OAAO,CAAC;gBACV,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3D,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,MAAM,CAAC;gBACT,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;gBACrE,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,SAAS,CAAC;gBACZ,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;gBACxE,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,UAAU,CAAC;gBACb,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;gBACzE,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,OAAO,CAAC;gBACV,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3D,OAAO,MAAM,CAAC;gBACd,MAAM;YACV;gBACI,OAAO,EAAE,CAAC;gBACV,MAAM;SACb;IACL,CAAC;IAEA;;MAEE;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;CACJ;AAjDD,wBAiDC","sourcesContent":["import {BasicStreamableCollection} from \"./basic\";\n\n/**\n * Attributes that a serie has\n * @param title Title of the serie\n * @param year Year when it was released\n * @param seasons How many seasons it has\n * @param episodes How many episodes it has\n * @param genre Genre of the serie\n */\nexport type serie = {\n    title: string;\n    year: number;\n    seasons: number;\n    episodes: number;\n    genre: string;\n}\n\n/**\n * Class that represents a collection of series\n */\nexport class Series extends BasicStreamableCollection<serie> {\n    /**\n     * Creates a new instance of a collection\n     * @param items Collection of series\n     */\n    constructor(protected items: serie[]) {\n        super(items);\n      }\n\n    /**\n     * Allows to search items by a value like title, year, etc.\n     * @param param The parameter you want to search by\n     * @param value The value of the parameter\n     */\n    searchBy(param: string, value: string) {\n        let result: serie[] = [];\n        switch (param) {\n            case ('title'):\n                result = this.getItems().filter((x) => (x.title == value));\n                return result;\n                break;\n            case ('year'):\n                result = this.getItems().filter((x) => (x.year.toString() == value));\n                return result;\n                break;\n            case ('seasons'):\n                result = this.getItems().filter((x) => (x.seasons.toString() == value));\n                return result;\n                break;\n            case ('episodes'):\n                result = this.getItems().filter((x) => (x.episodes.toString() == value));\n                return result;\n                break;\n            case ('genre'):\n                result = this.getItems().filter((x) => (x.genre == value));\n                return result;\n                break;\n            default:\n                return [];\n                break;\n        }\n    }\n\n     /**\n     * Returns the collection\n     */\n    getItems() {\n        return this.items;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"da95bcabb4e96dd9fd26af47a842a0f89fa7536b","contentHash":"9d8d76c587b1a57130f2faefab1c8b5deb62f942dfa4840269fd37d2d3d8f8ca"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/documentaries.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/documentaries.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"5":{"start":{"line":23,"column":21},"end":{"line":23,"column":23}},"6":{"start":{"line":24,"column":8},"end":{"line":44,"column":9}},"7":{"start":{"line":26,"column":16},"end":{"line":26,"column":75}},"8":{"start":{"line":26,"column":56},"end":{"line":26,"column":72}},"9":{"start":{"line":27,"column":16},"end":{"line":27,"column":30}},"10":{"start":{"line":28,"column":16},"end":{"line":28,"column":22}},"11":{"start":{"line":30,"column":16},"end":{"line":30,"column":85}},"12":{"start":{"line":30,"column":56},"end":{"line":30,"column":82}},"13":{"start":{"line":31,"column":16},"end":{"line":31,"column":30}},"14":{"start":{"line":32,"column":16},"end":{"line":32,"column":22}},"15":{"start":{"line":34,"column":16},"end":{"line":34,"column":89}},"16":{"start":{"line":34,"column":56},"end":{"line":34,"column":86}},"17":{"start":{"line":35,"column":16},"end":{"line":35,"column":30}},"18":{"start":{"line":36,"column":16},"end":{"line":36,"column":22}},"19":{"start":{"line":38,"column":16},"end":{"line":38,"column":75}},"20":{"start":{"line":38,"column":56},"end":{"line":38,"column":72}},"21":{"start":{"line":39,"column":16},"end":{"line":39,"column":30}},"22":{"start":{"line":40,"column":16},"end":{"line":40,"column":22}},"23":{"start":{"line":42,"column":16},"end":{"line":42,"column":26}},"24":{"start":{"line":43,"column":16},"end":{"line":43,"column":22}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":26}},"26":{"start":{"line":53,"column":0},"end":{"line":53,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":23},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":27},"end":{"line":45,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":48},"end":{"line":26,"column":49}},"loc":{"start":{"line":26,"column":56},"end":{"line":26,"column":72}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":48},"end":{"line":30,"column":49}},"loc":{"start":{"line":30,"column":56},"end":{"line":30,"column":82}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":48},"end":{"line":34,"column":49}},"loc":{"start":{"line":34,"column":56},"end":{"line":34,"column":86}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":48},"end":{"line":38,"column":49}},"loc":{"start":{"line":38,"column":56},"end":{"line":38,"column":72}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":15},"end":{"line":51,"column":5}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":44,"column":9}},"type":"switch","locations":[{"start":{"line":25,"column":12},"end":{"line":28,"column":22}},{"start":{"line":29,"column":12},"end":{"line":32,"column":22}},{"start":{"line":33,"column":12},"end":{"line":36,"column":22}},{"start":{"line":37,"column":12},"end":{"line":40,"column":22}},{"start":{"line":41,"column":12},"end":{"line":43,"column":22}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":1,"8":3,"9":1,"10":0,"11":1,"12":3,"13":1,"14":0,"15":1,"16":3,"17":1,"18":0,"19":1,"20":3,"21":1,"22":0,"23":0,"24":0,"25":4,"26":1},"f":{"0":1,"1":4,"2":3,"3":3,"4":3,"5":3,"6":4},"b":{"0":[1,1,1,1,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/documentaries.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-3/documentaries.ts"],"names":[],"mappings":";;;AAAA,mCAAkD;AAgBlD;;GAEG;AACH,MAAa,aAAc,SAAQ,iCAAsC;IACrE;;;OAGG;IACH,YAAsB,KAAoB;QACtC,KAAK,CAAC,KAAK,CAAC,CAAC;QADK,UAAK,GAAL,KAAK,CAAe;IAExC,CAAC;IAEH;;;;OAIG;IACH,QAAQ,CAAC,KAAa,EAAE,KAAa;QACjC,IAAI,MAAM,GAAkB,EAAE,CAAC;QAC/B,QAAQ,KAAK,EAAE;YACX,KAAK,CAAC,OAAO,CAAC;gBACV,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3D,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,MAAM,CAAC;gBACT,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;gBACrE,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,UAAU,CAAC;gBACb,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;gBACzE,OAAO,MAAM,CAAC;gBACd,MAAM;YACV,KAAK,CAAC,OAAO,CAAC;gBACV,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3D,OAAO,MAAM,CAAC;gBACd,MAAM;YACV;gBACI,OAAO,EAAE,CAAC;gBACV,MAAM;SACb;IACL,CAAC;IAED;;OAEG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;CACJ;AA7CD,sCA6CC","sourcesContent":["import {BasicStreamableCollection} from \"./basic\";\n\n/**\n * Attributes that a documentary has\n * @param title Title of the documentary\n * @param year Year when it was released\n * @param duration How much time it lasts\n * @param genre Genre of the documentary\n */\nexport type documentary = {\n    title: string;\n    year: number;\n    duration: number;\n    genre: string;\n}\n\n/**\n * Class that represents a collection of documentaries\n */\nexport class Documentaries extends BasicStreamableCollection<documentary> {\n    /**\n     * Creates a new instance of a collection\n     * @param items Collection of documentaries\n     */\n    constructor(protected items: documentary[]) {\n        super(items);\n      }\n\n    /**\n     * Allows to search items by a value like title, year, etc.\n     * @param param The parameter you want to search by\n     * @param value The value of the parameter\n     */\n    searchBy(param: string, value: string) {\n        let result: documentary[] = [];\n        switch (param) {\n            case ('title'):\n                result = this.getItems().filter((x) => (x.title == value));\n                return result;\n                break;\n            case ('year'):\n                result = this.getItems().filter((x) => (x.year.toString() == value));\n                return result;\n                break;\n            case ('duration'):\n                result = this.getItems().filter((x) => (x.duration.toString() == value));\n                return result;\n                break;\n            case ('genre'):\n                result = this.getItems().filter((x) => (x.genre == value));\n                return result;\n                break;\n            default:\n                return [];\n                break;\n        }\n    }\n\n    /**\n     * Returns the collection\n     */\n    getItems() {\n        return this.items;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e150a20a96dc7242a79f2887f9547c8d685237b4","contentHash":"2a12905a03824455306aad288e48515725ebf369b935ed63f6a63150a4a6ed46"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-4/complex.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-4/complex.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":19}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":76}},"4":{"start":{"line":29,"column":8},"end":{"line":29,"column":76}},"5":{"start":{"line":37,"column":8},"end":{"line":37,"column":136}},"6":{"start":{"line":45,"column":8},"end":{"line":45,"column":232}},"7":{"start":{"line":48,"column":0},"end":{"line":48,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":19},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":12},"end":{"line":22,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":30,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":17},"end":{"line":38,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":15},"end":{"line":46,"column":5}},"line":44}},"branchMap":{},"s":{"0":1,"1":1,"2":7,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":7,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-4/complex.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-alu0101205953/src/ejercicio-4/complex.ts"],"names":[],"mappings":";;;AASA;;GAEG;AACH,MAAa,OAAO;IAClB;;;OAGG;IACH,YAA4B,CAAU;QAAV,MAAC,GAAD,CAAC,CAAS;IACtC,CAAC;IAED;;;;OAIG;IACH,GAAG,CAAC,EAAW;QACb,OAAO,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAC,CAAC;IACpE,CAAC;IAEC;;;;KAIC;IACH,SAAS,CAAC,EAAW;QACnB,OAAO,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAC,CAAC;IACpE,CAAC;IAEC;;;;KAIC;IACH,QAAQ,CAAC,EAAW;QAClB,OAAO,EAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC;IAChI,CAAC;IAEC;;;;KAIC;IACH,MAAM,CAAC,EAAW;QAChB,OAAO,EAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;IAChO,CAAC;CACF;AA3CD,0BA2CC","sourcesContent":["import {Effectible} from \"./effectible\";\n/**\n * The data type Complex. It has a real part and an imaginary part\n */\n export type complex = {\n  real: number,\n  imag: number\n};\n\n/**\n * Class that represents a complex number\n */\nexport class Complex implements Effectible<complex> {\n  /**\n   * Creates an instance of a complex\n   * @param complex A complex number\n   */\n  constructor(public readonly c: complex) {\n  }\n\n  /**\n   * Adds two complexes\n   * @param C2 Second complex\n   * @returns The addition of both numbers\n   */\n  add(C2: complex): complex {\n    return {real: this.c.real + C2.real, imag: this.c.imag + C2.imag};\n  }\n\n    /**\n   * Substracts two complexes\n   * @param C2 Second complex\n   * @returns The substraction of both numbers\n   */\n  substract(C2: complex): complex {\n    return {real: this.c.real - C2.real, imag: this.c.imag - C2.imag};\n  }\n\n    /**\n   * Multiplies two complexes\n   * @param C2 Second complex\n   * @returns The multiplication of both numbers\n   */\n  multiply(C2: complex): complex {\n    return {real: ((this.c.real * C2.real) - (this.c.imag * C2.imag)), imag: ((this.c.real * C2.imag) + (this.c.imag * C2.real))};\n  }\n\n    /**\n   * Divides two complexes\n   * @param C2 Second complex\n   * @returns The division of both numbers\n   */\n  divide(C2: complex): complex {\n    return {real: (this.c.real * C2.real - this.c.imag * C2.imag) / ((Math.pow(C2.real, 2) + (Math.pow(C2.imag, 2)))), imag: (this.c.real * C2.imag + this.c.imag * C2.real) / ((Math.pow(C2.real, 2) + (Math.pow(C2.imag, 2))))};\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fd6363afd21caab063163d6ba9c162b7209a3893","contentHash":"4f03c463d037cce914b13ce80c31f4341e2631ae1c29ee8c592d8c50e9bc2334"}}